#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DALManagment
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MONEYCHANGERMGT")]
	public partial class DALDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPurchaseInformation(PurchaseInformation instance);
    partial void UpdatePurchaseInformation(PurchaseInformation instance);
    partial void DeletePurchaseInformation(PurchaseInformation instance);
    partial void InsertSellInformation(SellInformation instance);
    partial void UpdateSellInformation(SellInformation instance);
    partial void DeleteSellInformation(SellInformation instance);
    partial void InsertCountryInformation(CountryInformation instance);
    partial void UpdateCountryInformation(CountryInformation instance);
    partial void DeleteCountryInformation(CountryInformation instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    #endregion
		
		public DALDataContext() : 
				base(global::DALManagment.Properties.Settings.Default.dbMoneyChangerMgtConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BankInformation> BankInformations
		{
			get
			{
				return this.GetTable<BankInformation>();
			}
		}
		
		public System.Data.Linq.Table<MoneyChangerInformation> MoneyChangerInformations
		{
			get
			{
				return this.GetTable<MoneyChangerInformation>();
			}
		}
		
		public System.Data.Linq.Table<BankBranchInformation> BankBranchInformations
		{
			get
			{
				return this.GetTable<BankBranchInformation>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseInformation> PurchaseInformations
		{
			get
			{
				return this.GetTable<PurchaseInformation>();
			}
		}
		
		public System.Data.Linq.Table<SellInformation> SellInformations
		{
			get
			{
				return this.GetTable<SellInformation>();
			}
		}
		
		public System.Data.Linq.Table<CountryInformation> CountryInformations
		{
			get
			{
				return this.GetTable<CountryInformation>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyInformation> CurrencyInformations
		{
			get
			{
				return this.GetTable<CurrencyInformation>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateNewBankInformation")]
		public int CreateNewBankInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankName", DbType="VarChar(150)")] string bankName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Detail", DbType="VarChar(150)")] string detail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, bankName, detail, userId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateMoneyChangerInformation")]
		public int UpdateMoneyChangerInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MoneyChangerName", DbType="VarChar(150)")] string moneyChangerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Owner", DbType="VarChar(150)")] string owner, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="VarChar(200)")] string address)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, moneyChangerName, owner, address);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateNewCountryInformation")]
		public int CreateNewCountryInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryName", DbType="VarChar(100)")] string countryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, countryName, userId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateNewCurrencyInformation")]
		public int CreateNewCurrencyInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrencyName", DbType="VarChar(100)")] string currencyName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> countryId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, currencyName, countryId, userId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateNewMoneyChangerInformation")]
		public int CreateNewMoneyChangerInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MoneyChangerName", DbType="VarChar(150)")] string moneyChangerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Owner", DbType="VarChar(150)")] string owner, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="VarChar(200)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, moneyChangerName, owner, address, userId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteBankInformation")]
		public int DeleteBankInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteCurrencyInformation")]
		public int DeleteCurrencyInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteMoneyChangerInformation")]
		public int DeleteMoneyChangerInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllBankInformation")]
		public ISingleResult<GetAllBankInformationResult> GetAllBankInformation()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAllBankInformationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllCountryInformation")]
		public ISingleResult<GetAllCountryInformationResult> GetAllCountryInformation()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAllCountryInformationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllCurrencyInformation")]
		public ISingleResult<GetAllCurrencyInformationResult> GetAllCurrencyInformation()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAllCurrencyInformationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllMoneyChangerInformation")]
		public ISingleResult<GetAllMoneyChangerInformationResult> GetAllMoneyChangerInformation()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAllMoneyChangerInformationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBankInformation")]
		public int UpdateBankInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankName", DbType="VarChar(150)")] string bankName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Detail", DbType="VarChar(150)")] string detail)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, bankName, detail);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCountryInformation")]
		public int UpdateCountryInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryName", DbType="VarChar(100)")] string countryName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, countryName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCurrencyInformation")]
		public int UpdateCurrencyInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrencyName", DbType="VarChar(100)")] string currencyName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> countryId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, currencyName, countryId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateNewBranchInformation")]
		public int CreateNewBranchInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> bankId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BranchName", DbType="VarChar(150)")] string branchName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Detail", DbType="VarChar(150)")] string detail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, bankId, branchName, detail, userId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllBranchInformationByBankId")]
		public ISingleResult<GetAllBranchInformationByBankIdResult> GetAllBranchInformationByBankId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> bankId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankId);
			return ((ISingleResult<GetAllBranchInformationByBankIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBranchInformation")]
		public int UpdateBranchInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BranchName", DbType="VarChar(150)")] string branchName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Detail", DbType="VarChar(150)")] string detail)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, branchName, detail);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteBranchInformation")]
		public int DeleteBranchInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPurchaseInformation")]
		public ISingleResult<GetPurchaseInformationResult> GetPurchaseInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="Date")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="Date")] System.Nullable<System.DateTime> toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MoneyReceiptNo", DbType="VarChar(50)")] string moneyReceiptNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CutomerType", DbType="VarChar(20)")] string cutomerType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, moneyReceiptNo, cutomerType);
			return ((ISingleResult<GetPurchaseInformationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSellInformation")]
		public ISingleResult<GetSellInformationResult> GetSellInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="Date")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="Date")] System.Nullable<System.DateTime> toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MoneyReceiptNo", DbType="VarChar(50)")] string moneyReceiptNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CutomerType", DbType="VarChar(20)")] string cutomerType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, moneyReceiptNo, cutomerType);
			return ((ISingleResult<GetSellInformationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPurchaseInformationForReport")]
		public ISingleResult<GetPurchaseInformationForReportResult> GetPurchaseInformationForReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="Date")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="Date")] System.Nullable<System.DateTime> toDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
			return ((ISingleResult<GetPurchaseInformationForReportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSellInformationForReport")]
		public ISingleResult<GetSellInformationForReportResult> GetSellInformationForReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="Date")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="Date")] System.Nullable<System.DateTime> toDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
			return ((ISingleResult<GetSellInformationForReportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPurchaseSellBalanceByDate")]
		public ISingleResult<GetPurchaseSellBalanceByDateResult> GetPurchaseSellBalanceByDate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BalanceDate", DbType="Date")] System.Nullable<System.DateTime> balanceDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), balanceDate);
			return ((ISingleResult<GetPurchaseSellBalanceByDateResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankInformation")]
	public partial class BankInformation
	{
		
		private System.Nullable<System.Guid> _ID;
		
		private string _BankName;
		
		private string _Detail;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private System.Nullable<System.DateTime> _DeleteTime;
		
		public BankInformation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(150)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="VarChar(150)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this._Detail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this._DeleteTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoneyChangerInformation")]
	public partial class MoneyChangerInformation
	{
		
		private System.Nullable<System.Guid> _ID;
		
		private string _MoneyChangerName;
		
		private string _Owner;
		
		private string _Address;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private System.Nullable<System.DateTime> _DeleteTime;
		
		public MoneyChangerInformation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyChangerName", DbType="VarChar(150)")]
		public string MoneyChangerName
		{
			get
			{
				return this._MoneyChangerName;
			}
			set
			{
				if ((this._MoneyChangerName != value))
				{
					this._MoneyChangerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="VarChar(150)")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this._Owner = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this._DeleteTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankBranchInformation")]
	public partial class BankBranchInformation
	{
		
		private System.Nullable<System.Guid> _ID;
		
		private System.Nullable<System.Guid> _BankId;
		
		private string _BranchName;
		
		private string _Detail;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private System.Nullable<System.DateTime> _DeleteTime;
		
		public BankBranchInformation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this._BankId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="VarChar(150)")]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this._BranchName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="VarChar(150)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this._Detail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this._DeleteTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseInformation")]
	public partial class PurchaseInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PurchaseGroupId;
		
		private System.Nullable<System.Guid> _Cust_Id;
		
		private string _MoneyReceiptNo;
		
		private System.Nullable<System.Guid> _CurrencyId;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Rate;
		
		private System.Nullable<decimal> _Total;
		
		private string _AccNo;
		
		private string _RefMoneyReceiptNo;
		
		private System.Nullable<bool> _IsCancel;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _PurchasedDate;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private System.Nullable<System.DateTime> _DeleteTime;
		
		private System.Data.Linq.Binary _UpdateCheckTimeStamp;
		
		private System.Nullable<int> _CustomerType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPurchaseGroupIdChanging(System.Nullable<System.Guid> value);
    partial void OnPurchaseGroupIdChanged();
    partial void OnCust_IdChanging(System.Nullable<System.Guid> value);
    partial void OnCust_IdChanged();
    partial void OnMoneyReceiptNoChanging(string value);
    partial void OnMoneyReceiptNoChanged();
    partial void OnCurrencyIdChanging(System.Nullable<System.Guid> value);
    partial void OnCurrencyIdChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnRateChanging(System.Nullable<decimal> value);
    partial void OnRateChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnAccNoChanging(string value);
    partial void OnAccNoChanged();
    partial void OnRefMoneyReceiptNoChanging(string value);
    partial void OnRefMoneyReceiptNoChanged();
    partial void OnIsCancelChanging(System.Nullable<bool> value);
    partial void OnIsCancelChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPurchasedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchasedDateChanged();
    partial void OnCreateDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateTimeChanged();
    partial void OnDeleteTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteTimeChanged();
    partial void OnUpdateCheckTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnUpdateCheckTimeStampChanged();
    partial void OnCustomerTypeChanging(System.Nullable<int> value);
    partial void OnCustomerTypeChanged();
    #endregion
		
		public PurchaseInformation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseGroupId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PurchaseGroupId
		{
			get
			{
				return this._PurchaseGroupId;
			}
			set
			{
				if ((this._PurchaseGroupId != value))
				{
					this.OnPurchaseGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseGroupId = value;
					this.SendPropertyChanged("PurchaseGroupId");
					this.OnPurchaseGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Id", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Cust_Id
		{
			get
			{
				return this._Cust_Id;
			}
			set
			{
				if ((this._Cust_Id != value))
				{
					this.OnCust_IdChanging(value);
					this.SendPropertyChanging();
					this._Cust_Id = value;
					this.SendPropertyChanged("Cust_Id");
					this.OnCust_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyReceiptNo", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MoneyReceiptNo
		{
			get
			{
				return this._MoneyReceiptNo;
			}
			set
			{
				if ((this._MoneyReceiptNo != value))
				{
					this.OnMoneyReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._MoneyReceiptNo = value;
					this.SendPropertyChanged("MoneyReceiptNo");
					this.OnMoneyReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(12,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(7,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(14,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccNo", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string AccNo
		{
			get
			{
				return this._AccNo;
			}
			set
			{
				if ((this._AccNo != value))
				{
					this.OnAccNoChanging(value);
					this.SendPropertyChanging();
					this._AccNo = value;
					this.SendPropertyChanged("AccNo");
					this.OnAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefMoneyReceiptNo", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string RefMoneyReceiptNo
		{
			get
			{
				return this._RefMoneyReceiptNo;
			}
			set
			{
				if ((this._RefMoneyReceiptNo != value))
				{
					this.OnRefMoneyReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._RefMoneyReceiptNo = value;
					this.SendPropertyChanged("RefMoneyReceiptNo");
					this.OnRefMoneyReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancel", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsCancel
		{
			get
			{
				return this._IsCancel;
			}
			set
			{
				if ((this._IsCancel != value))
				{
					this.OnIsCancelChanging(value);
					this.SendPropertyChanging();
					this._IsCancel = value;
					this.SendPropertyChanged("IsCancel");
					this.OnIsCancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasedDate", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> PurchasedDate
		{
			get
			{
				return this._PurchasedDate;
			}
			set
			{
				if ((this._PurchasedDate != value))
				{
					this.OnPurchasedDateChanging(value);
					this.SendPropertyChanging();
					this._PurchasedDate = value;
					this.SendPropertyChanged("PurchasedDate");
					this.OnPurchasedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this.OnCreateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateDateTime = value;
					this.SendPropertyChanged("CreateDateTime");
					this.OnCreateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this.OnDeleteTimeChanging(value);
					this.SendPropertyChanging();
					this._DeleteTime = value;
					this.SendPropertyChanged("DeleteTime");
					this.OnDeleteTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateCheckTimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary UpdateCheckTimeStamp
		{
			get
			{
				return this._UpdateCheckTimeStamp;
			}
			set
			{
				if ((this._UpdateCheckTimeStamp != value))
				{
					this.OnUpdateCheckTimeStampChanging(value);
					this.SendPropertyChanging();
					this._UpdateCheckTimeStamp = value;
					this.SendPropertyChanged("UpdateCheckTimeStamp");
					this.OnUpdateCheckTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					this.OnCustomerTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerType = value;
					this.SendPropertyChanged("CustomerType");
					this.OnCustomerTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SellInformation")]
	public partial class SellInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _SellGroupId;
		
		private System.Nullable<System.Guid> _Cust_Id;
		
		private string _MoneyReceiptNo;
		
		private System.Nullable<System.Guid> _CurrencyId;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Rate;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<int> _CustomerType;
		
		private string _AccNo;
		
		private string _RefMoneyReceiptNo;
		
		private System.Nullable<bool> _IsCancel;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _SoldDate;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private System.Nullable<System.DateTime> _DeleteTime;
		
		private System.Data.Linq.Binary _UpdateCheckTimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnSellGroupIdChanging(System.Nullable<System.Guid> value);
    partial void OnSellGroupIdChanged();
    partial void OnCust_IdChanging(System.Nullable<System.Guid> value);
    partial void OnCust_IdChanged();
    partial void OnMoneyReceiptNoChanging(string value);
    partial void OnMoneyReceiptNoChanged();
    partial void OnCurrencyIdChanging(System.Nullable<System.Guid> value);
    partial void OnCurrencyIdChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnRateChanging(System.Nullable<decimal> value);
    partial void OnRateChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnCustomerTypeChanging(System.Nullable<int> value);
    partial void OnCustomerTypeChanged();
    partial void OnAccNoChanging(string value);
    partial void OnAccNoChanged();
    partial void OnRefMoneyReceiptNoChanging(string value);
    partial void OnRefMoneyReceiptNoChanged();
    partial void OnIsCancelChanging(System.Nullable<bool> value);
    partial void OnIsCancelChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnSoldDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSoldDateChanged();
    partial void OnCreateDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateTimeChanged();
    partial void OnDeleteTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteTimeChanged();
    partial void OnUpdateCheckTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnUpdateCheckTimeStampChanged();
    #endregion
		
		public SellInformation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellGroupId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> SellGroupId
		{
			get
			{
				return this._SellGroupId;
			}
			set
			{
				if ((this._SellGroupId != value))
				{
					this.OnSellGroupIdChanging(value);
					this.SendPropertyChanging();
					this._SellGroupId = value;
					this.SendPropertyChanged("SellGroupId");
					this.OnSellGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Id", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Cust_Id
		{
			get
			{
				return this._Cust_Id;
			}
			set
			{
				if ((this._Cust_Id != value))
				{
					this.OnCust_IdChanging(value);
					this.SendPropertyChanging();
					this._Cust_Id = value;
					this.SendPropertyChanged("Cust_Id");
					this.OnCust_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyReceiptNo", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MoneyReceiptNo
		{
			get
			{
				return this._MoneyReceiptNo;
			}
			set
			{
				if ((this._MoneyReceiptNo != value))
				{
					this.OnMoneyReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._MoneyReceiptNo = value;
					this.SendPropertyChanged("MoneyReceiptNo");
					this.OnMoneyReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(12,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(7,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(14,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					this.OnCustomerTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerType = value;
					this.SendPropertyChanged("CustomerType");
					this.OnCustomerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccNo", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string AccNo
		{
			get
			{
				return this._AccNo;
			}
			set
			{
				if ((this._AccNo != value))
				{
					this.OnAccNoChanging(value);
					this.SendPropertyChanging();
					this._AccNo = value;
					this.SendPropertyChanged("AccNo");
					this.OnAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefMoneyReceiptNo", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string RefMoneyReceiptNo
		{
			get
			{
				return this._RefMoneyReceiptNo;
			}
			set
			{
				if ((this._RefMoneyReceiptNo != value))
				{
					this.OnRefMoneyReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._RefMoneyReceiptNo = value;
					this.SendPropertyChanged("RefMoneyReceiptNo");
					this.OnRefMoneyReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancel", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsCancel
		{
			get
			{
				return this._IsCancel;
			}
			set
			{
				if ((this._IsCancel != value))
				{
					this.OnIsCancelChanging(value);
					this.SendPropertyChanging();
					this._IsCancel = value;
					this.SendPropertyChanged("IsCancel");
					this.OnIsCancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldDate", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> SoldDate
		{
			get
			{
				return this._SoldDate;
			}
			set
			{
				if ((this._SoldDate != value))
				{
					this.OnSoldDateChanging(value);
					this.SendPropertyChanging();
					this._SoldDate = value;
					this.SendPropertyChanged("SoldDate");
					this.OnSoldDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this.OnCreateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateDateTime = value;
					this.SendPropertyChanged("CreateDateTime");
					this.OnCreateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this.OnDeleteTimeChanging(value);
					this.SendPropertyChanging();
					this._DeleteTime = value;
					this.SendPropertyChanged("DeleteTime");
					this.OnDeleteTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateCheckTimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary UpdateCheckTimeStamp
		{
			get
			{
				return this._UpdateCheckTimeStamp;
			}
			set
			{
				if ((this._UpdateCheckTimeStamp != value))
				{
					this.OnUpdateCheckTimeStampChanging(value);
					this.SendPropertyChanging();
					this._UpdateCheckTimeStamp = value;
					this.SendPropertyChanged("UpdateCheckTimeStamp");
					this.OnUpdateCheckTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CountryInformation")]
	public partial class CountryInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _CountryName;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private System.Nullable<System.DateTime> _DeleteTime;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnCreateDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateTimeChanged();
    partial void OnDeleteTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteTimeChanged();
    #endregion
		
		public CountryInformation()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(150)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this.OnCreateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateDateTime = value;
					this.SendPropertyChanged("CreateDateTime");
					this.OnCreateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this.OnDeleteTimeChanging(value);
					this.SendPropertyChanging();
					this._DeleteTime = value;
					this.SendPropertyChanged("DeleteTime");
					this.OnDeleteTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryInformation_Customer", Storage="_Customers", ThisKey="ID", OtherKey="Nationality")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CountryInformation = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CountryInformation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _MobileNumber;
		
		private string _Address;
		
		private System.Data.Linq.Binary _UpdateCheckTimeStamp;
		
		private string _PassportNo;
		
		private System.Nullable<System.Guid> _Nationality;
		
		private EntityRef<CountryInformation> _CountryInformation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnUpdateCheckTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnUpdateCheckTimeStampChanged();
    partial void OnPassportNoChanging(string value);
    partial void OnPassportNoChanged();
    partial void OnNationalityChanging(System.Nullable<System.Guid> value);
    partial void OnNationalityChanged();
    #endregion
		
		public Customer()
		{
			this._CountryInformation = default(EntityRef<CountryInformation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(300)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateCheckTimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary UpdateCheckTimeStamp
		{
			get
			{
				return this._UpdateCheckTimeStamp;
			}
			set
			{
				if ((this._UpdateCheckTimeStamp != value))
				{
					this.OnUpdateCheckTimeStampChanging(value);
					this.SendPropertyChanging();
					this._UpdateCheckTimeStamp = value;
					this.SendPropertyChanged("UpdateCheckTimeStamp");
					this.OnUpdateCheckTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNo", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PassportNo
		{
			get
			{
				return this._PassportNo;
			}
			set
			{
				if ((this._PassportNo != value))
				{
					this.OnPassportNoChanging(value);
					this.SendPropertyChanging();
					this._PassportNo = value;
					this.SendPropertyChanged("PassportNo");
					this.OnPassportNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					if (this._CountryInformation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryInformation_Customer", Storage="_CountryInformation", ThisKey="Nationality", OtherKey="ID", IsForeignKey=true)]
		public CountryInformation CountryInformation
		{
			get
			{
				return this._CountryInformation.Entity;
			}
			set
			{
				CountryInformation previousValue = this._CountryInformation.Entity;
				if (((previousValue != value) 
							|| (this._CountryInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CountryInformation.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._CountryInformation.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._Nationality = value.ID;
					}
					else
					{
						this._Nationality = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("CountryInformation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrencyInformation")]
	public partial class CurrencyInformation
	{
		
		private System.Nullable<System.Guid> _ID;
		
		private string _CurrencyName;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private System.Nullable<System.Guid> _CountryId;
		
		private System.Nullable<System.DateTime> _DeleteTime;
		
		public CurrencyInformation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(100)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this._DeleteTime = value;
				}
			}
		}
	}
	
	public partial class GetAllBankInformationResult
	{
		
		private System.Nullable<System.Guid> _Id;
		
		private string _BankName;
		
		private string _Detail;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		public GetAllBankInformationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(150)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="VarChar(150)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this._Detail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
	}
	
	public partial class GetAllCountryInformationResult
	{
		
		private System.Nullable<System.Guid> _Id;
		
		private string _CountryName;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		public GetAllCountryInformationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(150)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
	}
	
	public partial class GetAllCurrencyInformationResult
	{
		
		private System.Nullable<System.Guid> _Id;
		
		private string _CurrencyName;
		
		private System.Nullable<System.Guid> _CountryId;
		
		private string _CountryName;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		public GetAllCurrencyInformationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(100)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(150)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
	}
	
	public partial class GetAllMoneyChangerInformationResult
	{
		
		private System.Nullable<System.Guid> _Id;
		
		private string _MoneyChangerName;
		
		private string _Owner;
		
		private string _Address;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		public GetAllMoneyChangerInformationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyChangerName", DbType="VarChar(150)")]
		public string MoneyChangerName
		{
			get
			{
				return this._MoneyChangerName;
			}
			set
			{
				if ((this._MoneyChangerName != value))
				{
					this._MoneyChangerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="VarChar(150)")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this._Owner = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
	}
	
	public partial class GetAllBranchInformationByBankIdResult
	{
		
		private System.Nullable<System.Guid> _Id;
		
		private System.Nullable<System.Guid> _BankId;
		
		private string _BranchName;
		
		private string _Detail;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		public GetAllBranchInformationByBankIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this._BankId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="VarChar(150)")]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this._BranchName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="VarChar(150)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this._Detail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
	}
	
	public partial class GetPurchaseInformationResult
	{
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PurchaseGroupId;
		
		private System.Nullable<int> _CustomerType;
		
		private string _CustomerName;
		
		private string _MoneyReceiptNo;
		
		private string _CurrencyName;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Rate;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<System.DateTime> _PurchasedDate;
		
		public GetPurchaseInformationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseGroupId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PurchaseGroupId
		{
			get
			{
				return this._PurchaseGroupId;
			}
			set
			{
				if ((this._PurchaseGroupId != value))
				{
					this._PurchaseGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType", DbType="Int")]
		public System.Nullable<int> CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					this._CustomerType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(200)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyReceiptNo", DbType="VarChar(50)")]
		public string MoneyReceiptNo
		{
			get
			{
				return this._MoneyReceiptNo;
			}
			set
			{
				if ((this._MoneyReceiptNo != value))
				{
					this._MoneyReceiptNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(100)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this._Rate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasedDate", DbType="Date")]
		public System.Nullable<System.DateTime> PurchasedDate
		{
			get
			{
				return this._PurchasedDate;
			}
			set
			{
				if ((this._PurchasedDate != value))
				{
					this._PurchasedDate = value;
				}
			}
		}
	}
	
	public partial class GetSellInformationResult
	{
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _SellGroupId;
		
		private System.Nullable<int> _CustomerType;
		
		private string _CustomerName;
		
		private string _MoneyReceiptNo;
		
		private string _CurrencyName;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Rate;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<System.DateTime> _SoldDate;
		
		public GetSellInformationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellGroupId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SellGroupId
		{
			get
			{
				return this._SellGroupId;
			}
			set
			{
				if ((this._SellGroupId != value))
				{
					this._SellGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType", DbType="Int")]
		public System.Nullable<int> CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					this._CustomerType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(200)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyReceiptNo", DbType="VarChar(50)")]
		public string MoneyReceiptNo
		{
			get
			{
				return this._MoneyReceiptNo;
			}
			set
			{
				if ((this._MoneyReceiptNo != value))
				{
					this._MoneyReceiptNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(100)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this._Rate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldDate", DbType="Date")]
		public System.Nullable<System.DateTime> SoldDate
		{
			get
			{
				return this._SoldDate;
			}
			set
			{
				if ((this._SoldDate != value))
				{
					this._SoldDate = value;
				}
			}
		}
	}
	
	public partial class GetPurchaseInformationForReportResult
	{
		
		private string _CurrencyName;
		
		private System.Nullable<decimal> _TotalPurchasedAmount;
		
		private System.Nullable<decimal> _TotalBDTAmount;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		public GetPurchaseInformationForReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(100)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPurchasedAmount", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> TotalPurchasedAmount
		{
			get
			{
				return this._TotalPurchasedAmount;
			}
			set
			{
				if ((this._TotalPurchasedAmount != value))
				{
					this._TotalPurchasedAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBDTAmount", DbType="Decimal(38,3)")]
		public System.Nullable<decimal> TotalBDTAmount
		{
			get
			{
				return this._TotalBDTAmount;
			}
			set
			{
				if ((this._TotalBDTAmount != value))
				{
					this._TotalBDTAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="Date")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this._FromDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="Date")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this._ToDate = value;
				}
			}
		}
	}
	
	public partial class GetSellInformationForReportResult
	{
		
		private string _CurrencyName;
		
		private System.Nullable<decimal> _TotalSoldAmount;
		
		private System.Nullable<decimal> _TotalBDTAmount;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		public GetSellInformationForReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(100)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSoldAmount", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> TotalSoldAmount
		{
			get
			{
				return this._TotalSoldAmount;
			}
			set
			{
				if ((this._TotalSoldAmount != value))
				{
					this._TotalSoldAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBDTAmount", DbType="Decimal(38,3)")]
		public System.Nullable<decimal> TotalBDTAmount
		{
			get
			{
				return this._TotalBDTAmount;
			}
			set
			{
				if ((this._TotalBDTAmount != value))
				{
					this._TotalBDTAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="Date")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this._FromDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="Date")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this._ToDate = value;
				}
			}
		}
	}
	
	public partial class GetPurchaseSellBalanceByDateResult
	{
		
		private string _CurrencyName;
		
		private System.Nullable<decimal> _OpeningBalance;
		
		private System.Nullable<decimal> _TotalPurchasedAmount;
		
		private System.Nullable<decimal> _TotalSoldAmount;
		
		private System.Nullable<decimal> _ClosingBalance;
		
		private System.Nullable<System.DateTime> _UptoDate;
		
		public GetPurchaseSellBalanceByDateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(100)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningBalance", DbType="Decimal(38,3)")]
		public System.Nullable<decimal> OpeningBalance
		{
			get
			{
				return this._OpeningBalance;
			}
			set
			{
				if ((this._OpeningBalance != value))
				{
					this._OpeningBalance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPurchasedAmount", DbType="Decimal(38,3)")]
		public System.Nullable<decimal> TotalPurchasedAmount
		{
			get
			{
				return this._TotalPurchasedAmount;
			}
			set
			{
				if ((this._TotalPurchasedAmount != value))
				{
					this._TotalPurchasedAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSoldAmount", DbType="Decimal(38,3)")]
		public System.Nullable<decimal> TotalSoldAmount
		{
			get
			{
				return this._TotalSoldAmount;
			}
			set
			{
				if ((this._TotalSoldAmount != value))
				{
					this._TotalSoldAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingBalance", DbType="Decimal(38,3)")]
		public System.Nullable<decimal> ClosingBalance
		{
			get
			{
				return this._ClosingBalance;
			}
			set
			{
				if ((this._ClosingBalance != value))
				{
					this._ClosingBalance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UptoDate", DbType="Date")]
		public System.Nullable<System.DateTime> UptoDate
		{
			get
			{
				return this._UptoDate;
			}
			set
			{
				if ((this._UptoDate != value))
				{
					this._UptoDate = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
