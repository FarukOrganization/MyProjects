#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ParameterManagment
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="dbMoneyChangerMgt")]
	public partial class ParameterClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public ParameterClassesDataContext() : 
				base(global::ParameterManagment.Properties.Settings.Default.dbMoneyChangerMgtConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public ParameterClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ParameterClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ParameterClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ParameterClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BankInformation> BankInformations
		{
			get
			{
				return this.GetTable<BankInformation>();
			}
		}
		
		public System.Data.Linq.Table<MoneyChangerInformation> MoneyChangerInformations
		{
			get
			{
				return this.GetTable<MoneyChangerInformation>();
			}
		}
		
		public System.Data.Linq.Table<CountryInformation> CountryInformations
		{
			get
			{
				return this.GetTable<CountryInformation>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyInformation> CurrencyInformations
		{
			get
			{
				return this.GetTable<CurrencyInformation>();
			}
		}
		
		public System.Data.Linq.Table<BankBranchInformation> BankBranchInformations
		{
			get
			{
				return this.GetTable<BankBranchInformation>();
			}
		}
		
		[Function(Name="dbo.CreateNewBankInformation")]
		public int CreateNewBankInformation([Parameter(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [Parameter(Name="BankName", DbType="VarChar(150)")] string bankName, [Parameter(Name="Detail", DbType="VarChar(150)")] string detail, [Parameter(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, bankName, detail, userId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdateMoneyChangerInformation")]
		public int UpdateMoneyChangerInformation([Parameter(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [Parameter(Name="MoneyChangerName", DbType="VarChar(150)")] string moneyChangerName, [Parameter(Name="Owner", DbType="VarChar(150)")] string owner, [Parameter(Name="Address", DbType="VarChar(200)")] string address)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, moneyChangerName, owner, address);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreateNewCountryInformation")]
		public int CreateNewCountryInformation([Parameter(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [Parameter(Name="CountryName", DbType="VarChar(100)")] string countryName, [Parameter(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, countryName, userId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreateNewCurrencyInformation")]
		public int CreateNewCurrencyInformation([Parameter(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [Parameter(Name="CurrencyName", DbType="VarChar(100)")] string currencyName, [Parameter(Name="CountryId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> countryId, [Parameter(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, currencyName, countryId, userId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreateNewMoneyChangerInformation")]
		public int CreateNewMoneyChangerInformation([Parameter(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [Parameter(Name="MoneyChangerName", DbType="VarChar(150)")] string moneyChangerName, [Parameter(Name="Owner", DbType="VarChar(150)")] string owner, [Parameter(Name="Address", DbType="VarChar(200)")] string address, [Parameter(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, moneyChangerName, owner, address, userId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DeleteBankInformation")]
		public int DeleteBankInformation([Parameter(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DeleteCurrencyInformation")]
		public int DeleteCurrencyInformation([Parameter(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DeleteMoneyChangerInformation")]
		public int DeleteMoneyChangerInformation([Parameter(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetAllBankInformation")]
		public ISingleResult<GetAllBankInformationResult> GetAllBankInformation()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAllBankInformationResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetAllCountryInformation")]
		public ISingleResult<GetAllCountryInformationResult> GetAllCountryInformation()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAllCountryInformationResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetAllCurrencyInformation")]
		public ISingleResult<GetAllCurrencyInformationResult> GetAllCurrencyInformation()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAllCurrencyInformationResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetAllMoneyChangerInformation")]
		public ISingleResult<GetAllMoneyChangerInformationResult> GetAllMoneyChangerInformation()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAllMoneyChangerInformationResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdateBankInformation")]
		public int UpdateBankInformation([Parameter(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [Parameter(Name="BankName", DbType="VarChar(150)")] string bankName, [Parameter(Name="Detail", DbType="VarChar(150)")] string detail)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, bankName, detail);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdateCountryInformation")]
		public int UpdateCountryInformation([Parameter(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [Parameter(Name="CountryName", DbType="VarChar(100)")] string countryName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, countryName);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdateCurrencyInformation")]
		public int UpdateCurrencyInformation([Parameter(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [Parameter(Name="CurrencyName", DbType="VarChar(100)")] string currencyName, [Parameter(Name="CountryId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> countryId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, currencyName, countryId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CreateNewBranchInformation")]
		public int CreateNewBranchInformation([Parameter(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [Parameter(Name="BankId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> bankId, [Parameter(Name="BranchName", DbType="VarChar(150)")] string branchName, [Parameter(Name="Detail", DbType="VarChar(150)")] string detail, [Parameter(Name="UserId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, bankId, branchName, detail, userId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetAllBranchInformationByBankId")]
		public ISingleResult<GetAllBranchInformationByBankIdResult> GetAllBranchInformationByBankId([Parameter(Name="BankId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> bankId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankId);
			return ((ISingleResult<GetAllBranchInformationByBankIdResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdateBranchInformation")]
		public int UpdateBranchInformation([Parameter(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD, [Parameter(Name="BranchName", DbType="VarChar(150)")] string branchName, [Parameter(Name="Detail", DbType="VarChar(150)")] string detail)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, branchName, detail);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.DeleteBranchInformation")]
		public int DeleteBranchInformation([Parameter(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.BankInformation")]
	public partial class BankInformation
	{
		
		private System.Nullable<System.Guid> _ID;
		
		private string _BankName;
		
		private string _Detail;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private System.Nullable<System.DateTime> _DeleteTime;
		
		public BankInformation()
		{
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_BankName", DbType="VarChar(150)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[Column(Storage="_Detail", DbType="VarChar(150)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this._Detail = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[Column(Storage="_DeleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this._DeleteTime = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.MoneyChangerInformation")]
	public partial class MoneyChangerInformation
	{
		
		private System.Nullable<System.Guid> _ID;
		
		private string _MoneyChangerName;
		
		private string _Owner;
		
		private string _Address;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private System.Nullable<System.DateTime> _DeleteTime;
		
		public MoneyChangerInformation()
		{
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_MoneyChangerName", DbType="VarChar(150)")]
		public string MoneyChangerName
		{
			get
			{
				return this._MoneyChangerName;
			}
			set
			{
				if ((this._MoneyChangerName != value))
				{
					this._MoneyChangerName = value;
				}
			}
		}
		
		[Column(Storage="_Owner", DbType="VarChar(150)")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this._Owner = value;
				}
			}
		}
		
		[Column(Storage="_Address", DbType="VarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[Column(Storage="_DeleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this._DeleteTime = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.CountryInformation")]
	public partial class CountryInformation
	{
		
		private System.Nullable<System.Guid> _ID;
		
		private string _CountryName;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private System.Nullable<System.DateTime> _DeleteTime;
		
		public CountryInformation()
		{
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_CountryName", DbType="VarChar(150)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[Column(Storage="_DeleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this._DeleteTime = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.CurrencyInformation")]
	public partial class CurrencyInformation
	{
		
		private System.Nullable<System.Guid> _ID;
		
		private string _CurrencyName;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private System.Nullable<System.Guid> _CountryId;
		
		private System.Nullable<System.DateTime> _DeleteTime;
		
		public CurrencyInformation()
		{
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_CurrencyName", DbType="VarChar(100)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[Column(Storage="_CountryId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[Column(Storage="_DeleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this._DeleteTime = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.BankBranchInformation")]
	public partial class BankBranchInformation
	{
		
		private System.Nullable<System.Guid> _ID;
		
		private System.Nullable<System.Guid> _BankId;
		
		private string _BranchName;
		
		private string _Detail;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		private System.Nullable<System.DateTime> _DeleteTime;
		
		public BankBranchInformation()
		{
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_BankId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this._BankId = value;
				}
			}
		}
		
		[Column(Storage="_BranchName", DbType="VarChar(150)")]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this._BranchName = value;
				}
			}
		}
		
		[Column(Storage="_Detail", DbType="VarChar(150)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this._Detail = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
		
		[Column(Storage="_DeleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this._DeleteTime = value;
				}
			}
		}
	}
	
	public partial class GetAllBankInformationResult
	{
		
		private System.Nullable<System.Guid> _Id;
		
		private string _BankName;
		
		private string _Detail;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		public GetAllBankInformationResult()
		{
		}
		
		[Column(Storage="_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[Column(Storage="_BankName", DbType="VarChar(150)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[Column(Storage="_Detail", DbType="VarChar(150)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this._Detail = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
	}
	
	public partial class GetAllCountryInformationResult
	{
		
		private System.Nullable<System.Guid> _Id;
		
		private string _CountryName;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		public GetAllCountryInformationResult()
		{
		}
		
		[Column(Storage="_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[Column(Storage="_CountryName", DbType="VarChar(150)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
	}
	
	public partial class GetAllCurrencyInformationResult
	{
		
		private System.Nullable<System.Guid> _Id;
		
		private string _CurrencyName;
		
		private System.Nullable<System.Guid> _CountryId;
		
		private string _CountryName;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		public GetAllCurrencyInformationResult()
		{
		}
		
		[Column(Storage="_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[Column(Storage="_CurrencyName", DbType="VarChar(100)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[Column(Storage="_CountryId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[Column(Storage="_CountryName", DbType="VarChar(150)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
	}
	
	public partial class GetAllMoneyChangerInformationResult
	{
		
		private System.Nullable<System.Guid> _Id;
		
		private string _MoneyChangerName;
		
		private string _Owner;
		
		private string _Address;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		public GetAllMoneyChangerInformationResult()
		{
		}
		
		[Column(Storage="_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[Column(Storage="_MoneyChangerName", DbType="VarChar(150)")]
		public string MoneyChangerName
		{
			get
			{
				return this._MoneyChangerName;
			}
			set
			{
				if ((this._MoneyChangerName != value))
				{
					this._MoneyChangerName = value;
				}
			}
		}
		
		[Column(Storage="_Owner", DbType="VarChar(150)")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this._Owner = value;
				}
			}
		}
		
		[Column(Storage="_Address", DbType="VarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
	}
	
	public partial class GetAllBranchInformationByBankIdResult
	{
		
		private System.Nullable<System.Guid> _Id;
		
		private System.Nullable<System.Guid> _BankId;
		
		private string _BranchName;
		
		private string _Detail;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDateTime;
		
		public GetAllBranchInformationByBankIdResult()
		{
		}
		
		[Column(Storage="_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[Column(Storage="_BankId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this._BankId = value;
				}
			}
		}
		
		[Column(Storage="_BranchName", DbType="VarChar(150)")]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this._BranchName = value;
				}
			}
		}
		
		[Column(Storage="_Detail", DbType="VarChar(150)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this._Detail = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_CreateDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDateTime
		{
			get
			{
				return this._CreateDateTime;
			}
			set
			{
				if ((this._CreateDateTime != value))
				{
					this._CreateDateTime = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
